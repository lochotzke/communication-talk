buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'commons-httpclient:commons-httpclient:3.1'
        classpath 'org.asciidoctor:asciidoctorj-diagram:1.3.1'
    }
}

plugins {
    id 'java'
    id 'groovy'
    id 'org.asciidoctor.convert' version '1.5.3'
    id 'org.ysb33r.vfs' version '1.0'
}


asciidoctorj {
    version = '1.5.4'
}

repositories {
    jcenter()
}

ext {
    downloadDir = new File(buildDir,'download')

    revealjsVersion = 'master'
    revealjsTemplateVersion = 'master'
    revealjsDir = new File(downloadDir,'reveal.js')
    revealjsTemplateDir = new File(downloadDir,'revealjs-backends/revealjs')

    examplesDir = file("${buildDir}/examples")

}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.ysb33r.groovy:groovy-vfs:1.0'
    compile 'org.codehaus.groovy:groovy:2.4.10'
    testCompile ('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module : 'groovy-all'
    }
}

task download {
    doLast {
        mkdir downloadDir
        vfs {
            if(!revealjsDir.exists()) {
                cp "zip:https://github.com/hakimel/reveal.js/archive/${revealjsVersion}.zip!reveal.js-${revealjsVersion}",
                        revealjsDir, recursive: true, overwrite: true
            }
            if(!revealjsTemplateDir.exists()) {
                cp "zip:https://github.com/ysb33r/asciidoctor-reveal.js/archive/${revealjsTemplateVersion}.zip!asciidoctor-reveal.js-${revealjsTemplateVersion}/templates/slim",
                        revealjsTemplateDir, recursive: true, overwrite: true
            }
        }
    }
}

download {
    outputs.dir revealjsDir
    outputs.dir revealjsTemplateDir
}

asciidoctor {

    inputs.dir 'src/main'
    inputs.dir 'src/test'

    requires 'asciidoctor-diagram'

    sources {
        include 'talk.ad'
    }

    resources {
        from('src/docs/asciidoc') {
            include 'images/**'
            include 'stylesheets/**'
            include 'reveal.js/**'
        }
        from (downloadDir) {
            include 'reveal.js/**'
        }
    }

    backends 'revealjs'

    options template_dirs : [ revealjsTemplateDir.parentFile.absolutePath ]

    attributes 'source-highlighter': 'coderay'
    attributes 'asciidoctorj' : asciidoctorj.version
    attributes imagesoutdir : "${outputDir}/revealjs/images"

    dependsOn download

    doLast {
        fileTree(outputDir) {
            include '**/*.html'
        }.files.each {
            it.text = it.text.replaceAll(/src="diag-/,'src="images/diag-')
        }
    }
}

build.dependsOn asciidoctor